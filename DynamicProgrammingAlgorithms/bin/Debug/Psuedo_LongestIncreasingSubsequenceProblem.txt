// start from second element in the array
    for (int i = 1; i < n; i++)
    {
        // do for each element in subarray arr[0..i-1]
        for (int j = 0; j < i; j++)
        {
            // find longest increasing subsequence that ends with arr[j]
            // where arr[j] is less than the current element arr[i]
 
            if (arr[j] < arr[i] && L[j] > L[i])
                L[i] = L[j];
        }
 
        // include arr[i] in LIS
        L[i]++;
    }
 
    // find longest increasing subsequence (having maximum length)
    int lis = INT_MIN;
    for (int x : L)
        lis = max(lis, x);